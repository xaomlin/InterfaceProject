{
  "uid" : "cd96d67faa411f19",
  "name" : "搜索APP",
  "fullName" : "scripts.test_case.Test_case#test_case",
  "historyId" : "2267bb04dfeab26bec94c39d05e91380",
  "time" : {
    "start" : 1610364224808,
    "stop" : 1610364226398,
    "duration" : 1590
  },
  "description" : "<font color=\"red\">请求URL：</font>https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀<br /><font color=\"red\">期望值：</font>{\"success\":tr}",
  "descriptionHtml" : "<p><font color=\"red\">请求URL：</font>https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀<br /><font color=\"red\">期望值：</font>{&quot;success&quot;:tr}</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert {'response': ....htm?kw=王者荣耀'} == '{\"success\":tr}'\n  +{'response': '请求发送失败，详细信息： url=https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀'}\n  -'{\"success\":tr}'",
  "statusTrace" : "self = <scripts.test_case.Test_case object at 0x04388BE0>\ncase = {'case_depend_id': '', 'case_depend_key': '', 'case_depend_param': '', 'case_expect': '{\"success\":tr}', ...}\n\n    @pytest.mark.parametrize('case', GetData().get_data)\n    def test_case(self, case):\n        \"\"\"  执行断言 \"\"\"\n        # print(case)\n        # 发请求\n        response = RequestHandler(case).get_response\n    \n        # 制作 allure 报告\n    \n        allure.dynamic.title(case['case_name'])\n        allure.dynamic.description('<font color=\"red\">请求URL：</font>{}<br />'\n                                   '<font color=\"red\">期望值：</font>{}'.format(case['case_url'], case['case_expect']))\n        allure.dynamic.feature(case['case_name'])\n        allure.dynamic.story(case['case_method'])\n>       assert response[0] == response[1]\nE       assert {'response': ....htm?kw=王者荣耀'} == '{\"success\":tr}'\nE         +{'response': '请求发送失败，详细信息： url=https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀'}\nE         -'{\"success\":tr}'\n\nscripts\\test_case.py:31: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1610364224463,
      "stop" : 1610364224463,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "<font color=\"red\">请求URL：</font>https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀<br /><font color=\"red\">期望值：</font>{\"success\":tr}",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert {'response': ....htm?kw=王者荣耀'} == '{\"success\":tr}'\n  +{'response': '请求发送失败，详细信息： url=https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀'}\n  -'{\"success\":tr}'",
    "statusTrace" : "self = <scripts.test_case.Test_case object at 0x04388BE0>\ncase = {'case_depend_id': '', 'case_depend_key': '', 'case_depend_param': '', 'case_expect': '{\"success\":tr}', ...}\n\n    @pytest.mark.parametrize('case', GetData().get_data)\n    def test_case(self, case):\n        \"\"\"  执行断言 \"\"\"\n        # print(case)\n        # 发请求\n        response = RequestHandler(case).get_response\n    \n        # 制作 allure 报告\n    \n        allure.dynamic.title(case['case_name'])\n        allure.dynamic.description('<font color=\"red\">请求URL：</font>{}<br />'\n                                   '<font color=\"red\">期望值：</font>{}'.format(case['case_url'], case['case_expect']))\n        allure.dynamic.feature(case['case_name'])\n        allure.dynamic.story(case['case_method'])\n>       assert response[0] == response[1]\nE       assert {'response': ....htm?kw=王者荣耀'} == '{\"success\":tr}'\nE         +{'response': '请求发送失败，详细信息： url=https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀'}\nE         -'{\"success\":tr}'\n\nscripts\\test_case.py:31: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9fa572179520d3df",
      "name" : "log",
      "source" : "9fa572179520d3df.txt",
      "type" : "text/plain",
      "size" : 154
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1610364232162,
      "stop" : 1610364235583,
      "duration" : 3421
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "搜索APP"
  }, {
    "name" : "story",
    "value" : "GET"
  }, {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "subSuite",
    "value" : "Test_case"
  }, {
    "name" : "host",
    "value" : "LAPTOP-2FL92AG3"
  }, {
    "name" : "thread",
    "value" : "12380-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'case_id': 'case_2', 'case_name': '搜索APP', 'case_run': 'yes', 'case_url': 'https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀', 'case_method': 'GET', 'case_depend_id': '', 'case_depend_key': '', 'case_depend_param': '', 'case_params': '', 'case_expect': '{\"success\":tr}', 'other': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "cd96d67faa411f19.json",
  "parameterValues" : [ "{'case_id': 'case_2', 'case_name': '搜索APP', 'case_run': 'yes', 'case_url': 'https://sj.qq.com/myapp/searchAjax.htm?kw=王者荣耀', 'case_method': 'GET', 'case_depend_id': '', 'case_depend_key': '', 'case_depend_param': '', 'case_params': '', 'case_expect': '{\"success\":tr}', 'other': ''}" ]
}